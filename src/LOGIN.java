import java.sql.*;
import javax.swing.JOptionPane;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.ImageIcon;
public class LOGIN extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs= null;
    PreparedStatement pst=null;
    public static String username = "";
    public static String status = "";
    /**
     * Creates new form LOGIN
     */
    public LOGIN() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("pics/logo3.png")).getImage());
    }
    
    public static String setUsername(String name) {
        username= name;
        return username;
    }
    public static String getUsername() {
        return username;
    }
    
    
   public static String setStat(String stat) {
        status= stat;
        return status;
    }
    public static String getStat() {
        return status;
    }
    
    public static String now() {
       String DATE_FORMAT_NOW = "yyyy-MM-dd HH:mm:ss";

        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT_NOW);
        return sdf.format(cal.getTime());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtusername = new javax.swing.JTextField();
        showPassword = new javax.swing.JLabel();
        txtpassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        errorU = new javax.swing.JLabel();
        errorP = new javax.swing.JLabel();
        eye = new javax.swing.JLabel();
        loginbtn = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(550, 360));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(235, 235, 235));
        jPanel1.setAlignmentX(0.0F);
        jPanel1.setAlignmentY(0.0F);
        jPanel1.setMinimumSize(new java.awt.Dimension(550, 360));
        jPanel1.setPreferredSize(new java.awt.Dimension(550, 360));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtusername.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtusername.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtusernameActionPerformed(evt);
            }
        });
        jPanel1.add(txtusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 230, 40));

        showPassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        showPassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(showPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 230, 40));

        txtpassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtpassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpasswordActionPerformed(evt);
            }
        });
        jPanel1.add(txtpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 230, 40));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Username:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 90, 20));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Password:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, 90, 20));

        errorU.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        errorU.setForeground(new java.awt.Color(255, 0, 0));
        errorU.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(errorU, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 230, 20));

        errorP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        errorP.setForeground(new java.awt.Color(255, 0, 0));
        errorP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(errorP, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 230, 20));

        eye.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/close.png"))); // NOI18N
        eye.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eyeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eyeMouseReleased(evt);
            }
        });
        jPanel1.add(eye, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 240, 40, 20));

        loginbtn.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        loginbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginbtn.setText("LOGIN");
        loginbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginbtnMouseExited(evt);
            }
        });
        jPanel1.add(loginbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 300, 50, 20));

        exit.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit.setText("X");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitMouseExited(evt);
            }
        });
        jPanel1.add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 10, 12, 20));

        minimize.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        minimize.setForeground(new java.awt.Color(255, 255, 255));
        minimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimize.setText("â€“");
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeMouseExited(evt);
            }
        });
        jPanel1.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(505, 10, 12, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Login_UI.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 360));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DB db= new DB();
        db.create();
        
        conn = mysqlconnect.ConnectDb();
    }//GEN-LAST:event_formWindowOpened

    private void eyeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eyeMousePressed
        eye.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/open.png")));
        String showPass = txtpassword.getText().toString();
        showPassword.setVisible(true);
        txtpassword.setText("");
        showPassword.setText(showPass);
    }//GEN-LAST:event_eyeMousePressed

    private void eyeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eyeMouseReleased
        eye.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/close.png")));
        String pass = showPassword.getText().toString();
        showPassword.setVisible(false);
        txtpassword.setText(pass);
    }//GEN-LAST:event_eyeMouseReleased

    private void loginbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginbtnMouseEntered
        loginbtn.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_loginbtnMouseEntered

    private void loginbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginbtnMouseExited
        loginbtn.setForeground(Color. black);
    }//GEN-LAST:event_loginbtnMouseExited

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        this.dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseEntered
        exit.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_exitMouseEntered

    private void exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseExited
        exit.setForeground(Color.white);
    }//GEN-LAST:event_exitMouseExited

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        this.setState(LOGIN.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseEntered
        minimize.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_minimizeMouseEntered

    private void minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseExited
        minimize.setForeground(Color.white);
    }//GEN-LAST:event_minimizeMouseExited

    private void loginbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginbtnMouseClicked
        String un=txtusername.getText();
        String pw= txtpassword.getText();
        String stat="";
        String sql= "select * from account where status!='INACTIVE'";
        try{
            errorU.setText("");
            errorP.setText("");
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            boolean checkUN=true;
            boolean checkPW=true;
            
            while(rs.next()){
                checkUN=true;
                checkPW=true;
                stat= rs.getString(4);
                String uname= rs.getString(2);
                String password= rs.getString(3);

                if(uname.equals(un)&&password.equals(pw))
                {
                    break;
                }
                //JOptionPane.showMessageDialog(null, stat);

                if(!(uname.equals(un)))
                {
                    checkUN=false;
                }

                if(uname.equals(un))
                {
                    checkUN=true;

                    if(password.equals(pw))
                    {
                        checkPW=true;

                        break;
                    }
                }

                if(uname.equals(un))
                {
                    if(!(password.equals(pw)))
                    {
                        checkPW=false;

                        break;
                    }
                }

            }

            if((checkUN==false) &&!((txtusername.getText()).equals(""))){
                errorU.setText("");
                JOptionPane.showMessageDialog(null, "Username is invalid");

            }

            if((checkPW==false) &&!((txtpassword.getText()).equals(""))){
                errorP.setText("");
                JOptionPane.showMessageDialog(null, "Password is invalid");

            }
            
            if(txtusername.getText().equals("")){
               errorU.setText("Please fill out this field");
              checkUN=false;
            }
            
            if(txtpassword.getText().equals("")){
               errorP.setText("Please fill out this field");
              checkPW=false;
            }
            
            if(checkPW==true&&checkUN==true)
            {
                if(stat.equals("Stock-in user")) {
                    this.dispose();
                    USERMENU u= new USERMENU();
                    u.setVisible(true);
                }
                
                else if(stat.equals("Stock-out user")) {
                    this.dispose();
                    USERMENU u= new USERMENU();
                    u.setVisible(true);
                }

                else if (stat.equals("admin")){
                    //JOptionPane.showMessageDialog(null, "Successfully logged in");
                    this.dispose();
                    HOME h = new HOME();
                    h.setVisible(true);
                    
                }
                setUsername(un);
                setStat(stat);
            }

        }catch(Exception e)
        {JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_loginbtnMouseClicked

    private void txtusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtusernameActionPerformed
        String un=txtusername.getText();
        String pw= txtpassword.getText();
        String stat="";
        String sql= "select * from account where status!='INACTIVE'";
        try{
            errorU.setText("");
            errorP.setText("");
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            boolean checkUN=true;
            boolean checkPW=true;
            
            while(rs.next()){
                checkUN=true;
                checkPW=true;
                stat= rs.getString(4);
                String uname= rs.getString(2);
                String password= rs.getString(3);

                if(uname.equals(un)&&password.equals(pw))
                {
                    break;
                }
                //JOptionPane.showMessageDialog(null, stat);

                if(!(uname.equals(un)))
                {
                    checkUN=false;
                }

                if(uname.equals(un))
                {
                    checkUN=true;

                    if(password.equals(pw))
                    {
                        checkPW=true;

                        break;
                    }
                }

                if(uname.equals(un))
                {
                    if(!(password.equals(pw)))
                    {
                        checkPW=false;

                        break;
                    }
                }

            }

            if((checkUN==false) &&!((txtusername.getText()).equals(""))){
                errorU.setText("");
                JOptionPane.showMessageDialog(null, "Username is invalid");

            }

            if((checkPW==false) &&!((txtpassword.getText()).equals(""))){
                errorP.setText("");
                JOptionPane.showMessageDialog(null, "Password is invalid");

            }
            
            if(txtusername.getText().equals("")){
               errorU.setText("Please fill out this field");
              checkUN=false;
            }
            
            if(txtpassword.getText().equals("")){
               errorP.setText("Please fill out this field");
              checkPW=false;
            }
            
            if(checkPW==true&&checkUN==true)
            {
                if(stat.equals("Stock-in user")) {
                    this.dispose();
                    USERMENU u= new USERMENU();
                    u.setVisible(true);
                }
                
                else if(stat.equals("Stock-out user")) {
                    this.dispose();
                    USERMENU u= new USERMENU();
                    u.setVisible(true);
                }

                else if (stat.equals("admin")){
                    this.dispose();
                    HOME h = new HOME();
                    h.setVisible(true);

                }
                setUsername(un);
                setStat(stat);
            }

        }catch(Exception e)
        {JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_txtusernameActionPerformed

    private void txtpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpasswordActionPerformed
        String un=txtusername.getText();
        String pw= txtpassword.getText();
        String stat="";
        String sql= "select * from account where status!='INACTIVE'";
        try{
            errorU.setText("");
            errorP.setText("");
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            boolean checkUN=true;
            boolean checkPW=true;
            
            while(rs.next()){
                checkUN=true;
                checkPW=true;
                stat= rs.getString(4);
                String uname= rs.getString(2);
                String password= rs.getString(3);

                if(uname.equals(un)&&password.equals(pw))
                {
                    break;
                }
                //JOptionPane.showMessageDialog(null, stat);

                if(!(uname.equals(un)))
                {
                    checkUN=false;
                }

                if(uname.equals(un))
                {
                    checkUN=true;

                    if(password.equals(pw))
                    {
                        checkPW=true;

                        break;
                    }
                }

                if(uname.equals(un))
                {
                    if(!(password.equals(pw)))
                    {
                        checkPW=false;

                        break;
                    }
                }

            }

            if((checkUN==false) &&!((txtusername.getText()).equals(""))){
                errorU.setText("");
                JOptionPane.showMessageDialog(null, "Username is invalid");

            }

            if((checkPW==false) &&!((txtpassword.getText()).equals(""))){
                errorP.setText("");
                JOptionPane.showMessageDialog(null, "Password is invalid");

            }
            
            if(txtusername.getText().equals("")){
               errorU.setText("Please fill out this field");
              checkUN=false;
            }
            
            if(txtpassword.getText().equals("")){
               errorP.setText("Please fill out this field");
              checkPW=false;
            }
            
            if(checkPW==true&&checkUN==true)
            {
                if(stat.equals("Stock-in user")) {
                    this.dispose();
                    USERMENU u= new USERMENU();
                    u.setVisible(true);
                }
                
                else if(stat.equals("Stock-out user")) {
                    this.dispose();
                    USERMENU u= new USERMENU();
                    u.setVisible(true);
                }

                else if (stat.equals("admin")){
                    this.dispose();
                    HOME h = new HOME();
                    h.setVisible(true);

                }
                setUsername(un);
                setStat(stat);
            }

        }catch(Exception e)
        {JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_txtpasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LOGIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorP;
    private javax.swing.JLabel errorU;
    private javax.swing.JLabel exit;
    private javax.swing.JLabel eye;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel loginbtn;
    private javax.swing.JLabel minimize;
    private javax.swing.JLabel showPassword;
    private javax.swing.JPasswordField txtpassword;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables
}
