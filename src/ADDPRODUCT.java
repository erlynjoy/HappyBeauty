import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Color;
import java.awt.Component;
import java.util.Calendar;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.*;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
public class ADDPRODUCT extends javax.swing.JFrame {
    
    Connection conn = null;
    ResultSet rs= null;
    PreparedStatement pst=null;
    ResultSet rs1= null;
    PreparedStatement pst1=null;
    ResultSet rs2= null;
    PreparedStatement pst2=null;
    PreparedStatement pst3=null;
    ResultSet rsA= null;
    PreparedStatement pstA=null;
    ResultSet rsR= null;
    PreparedStatement pstR=null;
    /**
     * Creates new form ADDPRODUCT
     */
    public ADDPRODUCT() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("pics/logo3.png")).getImage());
    }
    
    public static String now() {
       String DATE_FORMAT_NOW = "yyyy-MM-dd HH:mm:ss";

        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT_NOW);
        return sdf.format(cal.getTime());
    }
    
    public void tableResize(JTable table) {
        final TableColumnModel columnModel = table.getColumnModel();
        for (int column = 0; column < table.getColumnCount(); column++) {
            int width = 15;
            for(int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width+1, width);
            }
            if(width > 300) {
                width = 300;
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }
    
    void ProductTable()
    {
        String sql="select p_id AS 'ID', p_barcode AS 'Barcode', p_name AS 'Product name', p_cost AS 'Cost', p_brand AS 'Brand', p_weight AS 'Weight' from product where p_barcode!='ARCHIVE'";
        try{
            pst= conn.prepareStatement(sql);
            rs=pst.executeQuery();
            productTable.setModel(DbUtils.resultSetToTableModel(rs));
            tableResize(productTable);
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void blackText(){
        p_name.setForeground(Color.black);
        p_cost.setForeground(Color.black);
        barcode.setForeground(Color.black);
        p_brand.setForeground(Color.black);
        p_weight.setForeground(Color.black);
        cmbUnit.setForeground(Color.black);
    }

    public void clear(){
        error.setText("");
        errorBrand.setText("");
        errorUnit.setText("");
        p_name.setText("");
        p_cost.setText("");
        barcode.setText("");
        p_brand.setSelectedItem(null);
        p_weight.setText("");
        imglbl.setIcon(null);
        cmbUnit.setSelectedItem(null);
        searchProduct.setText("");
    }
    
    public void Brand(){
        
        String sql1="select DISTINCT p_brand from product where p_barcode!='ARCHIVE' ORDER BY p_brand ASC";
         try{
             
            p_brand.removeAllItems();
            
            pst1= conn.prepareStatement(sql1);
            rs1=pst1.executeQuery();
            
            while (rs1.next()) {  
           
            String item=rs1.getString(1);
            p_brand.addItem(item);  
          }
            
              }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e + "------combo");
        }
      }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        p_name = new javax.swing.JTextField();
        barcode = new javax.swing.JTextField();
        p_id = new javax.swing.JLabel();
        ADDBtn = new javax.swing.JLabel();
        UPDATEBtn = new javax.swing.JLabel();
        CANCELBtn = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        p_cost = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        p_brand = new javax.swing.JComboBox<>();
        p_weight = new javax.swing.JTextField();
        cmbUnit = new javax.swing.JComboBox<>();
        errorBrand = new javax.swing.JLabel();
        errorUnit = new javax.swing.JLabel();
        error = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        upload = new javax.swing.JButton();
        imglbl = new javax.swing.JLabel();
        bgpopup = new javax.swing.JLabel();
        ViewPanel = new javax.swing.JPanel();
        ADDlbl = new javax.swing.JButton();
        UPDATElbl = new javax.swing.JButton();
        CANCELlbl = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        searchProduct = new javax.swing.JTextField();
        minimize = new javax.swing.JLabel();
        BACKlbl = new javax.swing.JLabel();
        clr = new javax.swing.JLabel();
        productbg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1350, 720));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AddPanel.setBackground(new java.awt.Color(255, 250, 240));
        AddPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        AddPanel.setMinimumSize(new java.awt.Dimension(500, 500));
        AddPanel.setName(""); // NOI18N
        AddPanel.setPreferredSize(new java.awt.Dimension(500, 500));
        AddPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel7.setText("Size: Less than 1 MB");
        AddPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 445, 110, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel9.setText("Dimension: Equal width&height,");
        AddPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 460, 160, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("ex. 20x20, 500x500, etc.");
        AddPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 475, -1, -1));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("NAME");
        AddPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 45, 23));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("BARCODE");
        AddPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 70, -1));

        p_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        p_name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                p_nameFocusGained(evt);
            }
        });
        p_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_nameMouseClicked(evt);
            }
        });
        AddPanel.add(p_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 230, 40));

        barcode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        barcode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        barcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                barcodeFocusGained(evt);
            }
        });
        barcode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                barcodeMouseClicked(evt);
            }
        });
        barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                barcodeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                barcodeKeyTyped(evt);
            }
        });
        AddPanel.add(barcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 230, 40));
        AddPanel.add(p_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 50, 20));

        ADDBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ADDBtn.setText("ADD");
        ADDBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ADDBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ADDBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ADDBtnMouseExited(evt);
            }
        });
        AddPanel.add(ADDBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 463, 30, 20));

        UPDATEBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        UPDATEBtn.setText("UPDATE");
        UPDATEBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UPDATEBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                UPDATEBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                UPDATEBtnMouseExited(evt);
            }
        });
        AddPanel.add(UPDATEBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 463, 60, 20));

        CANCELBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CANCELBtn.setText("CANCEL");
        CANCELBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CANCELBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CANCELBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CANCELBtnMouseExited(evt);
            }
        });
        AddPanel.add(CANCELBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 463, 60, 20));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("COST");
        AddPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 45, 23));

        p_cost.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        p_cost.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p_cost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                p_costFocusGained(evt);
            }
        });
        p_cost.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_costMouseClicked(evt);
            }
        });
        p_cost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                p_costKeyTyped(evt);
            }
        });
        AddPanel.add(p_cost, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 230, 40));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("BRAND");
        AddPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 50, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("WEIGHT");
        AddPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 270, 60, 20));

        p_brand.setEditable(true);
        p_brand.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        p_brand.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                p_brandFocusGained(evt);
            }
        });
        p_brand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_brandMouseClicked(evt);
            }
        });
        p_brand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                p_brandKeyReleased(evt);
            }
        });
        AddPanel.add(p_brand, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 230, 40));

        p_weight.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        p_weight.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p_weight.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                p_weightFocusGained(evt);
            }
        });
        p_weight.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_weightMouseClicked(evt);
            }
        });
        p_weight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                p_weightKeyTyped(evt);
            }
        });
        AddPanel.add(p_weight, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 180, 40));

        cmbUnit.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "g", "kg", "mg", "ml", "oz" }));
        AddPanel.add(cmbUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 50, 40));

        errorBrand.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        errorBrand.setForeground(new java.awt.Color(255, 0, 0));
        errorBrand.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddPanel.add(errorBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, 230, 20));

        errorUnit.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        errorUnit.setForeground(new java.awt.Color(255, 0, 0));
        errorUnit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddPanel.add(errorUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, 230, 20));

        error.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        error.setForeground(new java.awt.Color(255, 0, 0));
        error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddPanel.add(error, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 230, 30));

        jLabel5.setText("jLabel5");
        AddPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("IMAGE");
        AddPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 325, 50, 20));

        upload.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        upload.setText("UPLOAD");
        upload.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                uploadMouseExited(evt);
            }
        });
        AddPanel.add(upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 325, 100, 35));

        imglbl.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(210, 156, 50), 2, true));
        AddPanel.add(imglbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 325, 120, 120));

        bgpopup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/POPUP-ADDPRODUCT.png"))); // NOI18N
        AddPanel.add(bgpopup, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 500));

        getContentPane().add(AddPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, 500, 500));

        ViewPanel.setMinimumSize(new java.awt.Dimension(1350, 720));
        ViewPanel.setPreferredSize(new java.awt.Dimension(1350, 720));
        ViewPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ADDlbl.setBackground(new java.awt.Color(255, 255, 255));
        ADDlbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ADDlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/add.png"))); // NOI18N
        ADDlbl.setText("ADD PRODUCT");
        ADDlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ADDlblMouseClicked(evt);
            }
        });
        ViewPanel.add(ADDlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 667, -1, 30));

        UPDATElbl.setBackground(new java.awt.Color(255, 255, 255));
        UPDATElbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        UPDATElbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/update icon.png"))); // NOI18N
        UPDATElbl.setText("UPDATE");
        UPDATElbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UPDATElblMouseClicked(evt);
            }
        });
        ViewPanel.add(UPDATElbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 667, 110, 30));

        CANCELlbl.setBackground(new java.awt.Color(255, 255, 255));
        CANCELlbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CANCELlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/cancel.png"))); // NOI18N
        CANCELlbl.setText("CANCEL");
        CANCELlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CANCELlblMouseClicked(evt);
            }
        });
        ViewPanel.add(CANCELlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 667, 110, 30));

        jScrollPane1.setBackground(new java.awt.Color(210, 156, 50));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N

        productTable = new javax.swing.JTable(){
            public boolean isCellEditable (int rowIndex, int colIndex){
                return false;
            }
        };
        productTable.setBackground(new java.awt.Color(210, 156, 50));
        productTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        productTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        productTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        productTable.getTableHeader().setReorderingAllowed(false);
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);

        ViewPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, 890, 560));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(210, 156, 50));
        jLabel8.setText("Search:");
        ViewPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 60, 30));

        searchProduct.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        searchProduct.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchProduct.setToolTipText("");
        searchProduct.setName(""); // NOI18N
        searchProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchProductKeyReleased(evt);
            }
        });
        ViewPanel.add(searchProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 230, 40));

        minimize.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        minimize.setForeground(new java.awt.Color(255, 255, 255));
        minimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimize.setText("–");
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeMouseExited(evt);
            }
        });
        ViewPanel.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 10, 12, 20));

        BACKlbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BACKlbl.setForeground(new java.awt.Color(255, 255, 255));
        BACKlbl.setText("BACK");
        BACKlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BACKlblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BACKlblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BACKlblMouseExited(evt);
            }
        });
        ViewPanel.add(BACKlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, 30));

        clr.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lady Ammon\\Documents\\NetBeansProjects\\HB_inventory_with_barcodescanner\\src\\pics\\clr.png")); // NOI18N
        clr.setIconTextGap(0);
        clr.setMaximumSize(new java.awt.Dimension(1350, 710));
        clr.setMinimumSize(new java.awt.Dimension(1350, 710));
        clr.setPreferredSize(new java.awt.Dimension(1350, 710));
        ViewPanel.add(clr, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1330, 700));

        productbg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/MANAGE-PRODUCT_UI.PNG"))); // NOI18N
        productbg.setText("jLabel7");
        productbg.setMaximumSize(new java.awt.Dimension(1350, 720));
        productbg.setMinimumSize(new java.awt.Dimension(1350, 720));
        productbg.setPreferredSize(new java.awt.Dimension(1350, 720));
        ViewPanel.add(productbg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1350, 720));

        getContentPane().add(ViewPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        conn = mysqlconnect.ConnectDb();
        ProductTable();
        Brand();
        clear();
        tableResize(productTable);
        p_id.setVisible(false);
        AddPanel.setVisible(false);
        ViewPanel.setVisible(true);
        ADDlbl.setVisible(true);
        UPDATElbl.setVisible(false);
        CANCELlbl.setVisible(false);
        clr.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void p_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_p_nameFocusGained
        if((p_name.getText()).equals(""))
        {
            p_name.setForeground(Color.black);
        }
        if((p_name.getText()).equals("Please fill out this field"))
        {
            p_name.setText("");
            p_name.setForeground(Color.black);
        }
    }//GEN-LAST:event_p_nameFocusGained

    private void barcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_barcodeFocusGained
        if((barcode.getText()).equals("Please fill out this field"))
        {
            barcode.setText("");
            barcode.setForeground(Color.black);
        }
    }//GEN-LAST:event_barcodeFocusGained

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        ADDlbl.setVisible(true);
        UPDATElbl.setVisible(true);
        CANCELlbl.setVisible(true);
    }//GEN-LAST:event_productTableMouseClicked

    private void ADDBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDBtnMouseClicked
        String sqlA = "INSERT into added_by (emp_id, Abarcode, date_in, qty_in) value (?,?,?,?)";
        String sqlR = "INSERT into released_by (eid, Rbarcode, date_out, qty_out) value (?,?,?,?)";
        String sql_act="INSERT INTO activity (act_details,act_user,act_date) values (?,?,?)";
        String sql = "INSERT into product (p_name, p_barcode, p_brand, p_weight, p_img, c_stock, p_cost) value (?,?,?,?,?,?,?)";
        try{
            boolean check = true;
            pst = conn.prepareStatement(sql);
            pstA = conn.prepareStatement(sqlA); 
            pstR = conn.prepareStatement(sqlR); 
            errorBrand.setText("");
            errorUnit.setText("");
            String date= ""+ now();
            String un = LOGIN.username;
            
            if(error.getText().equals("Barcode already exist")){
                check=false;
            }
            if(imglbl.getIcon() == null){
                JOptionPane.showMessageDialog(null, "Please upload image");
                check=false;
            }            
            if(p_name.getText().equals("")){
               p_name.setText("Please fill out this field");
               p_name.setForeground(Color.red);
              check=false;
          }
            if(p_name.getText().equals("Please fill out this field")){
              check=false;
          }
            if(p_cost.getText().equals("")){
               p_cost.setText("Please fill out this field");
               p_cost.setForeground(Color.red);
              check=false;
          }
            if(p_cost.getText().equals("Please fill out this field")){
              check=false;
          }
            if(barcode.getText().equals("")){
               barcode.setText("Please fill out this field");
               barcode.setForeground(Color.red);
              check=false;
          }
             if(barcode.getText().equals("Please fill out this field")){
              check=false;
          }
            if(p_brand.getSelectedItem() == null ){
               errorBrand.setText("No brand selected");
               errorBrand.setForeground(Color.red);
              check=false;
          }
            if(p_weight.getText().equals("")){
               p_weight.setText("Please fill out this field");
               p_weight.setForeground(Color.red);
              check=false;
          }
             if(p_weight.getText().equals("Please fill out this field")){
              check=false;
          }
            if(cmbUnit.getSelectedItem() == null ){
               errorUnit.setText("No unit weight selected");
               errorUnit.setForeground(Color.red);
              check=false;
          }
            
            if(check==true){
                
            pst.setString(1, p_name.getText());
            pst.setString(2, barcode.getText());
            pst.setString(3, p_brand.getSelectedItem().toString());
            pst.setString(4, p_weight.getText()+" "+cmbUnit.getSelectedItem());
            pst.setBytes(5,  person_image);
            pst.setString(6, "0");
            pst.setString(7, p_cost.getText());
            pst.execute();
            
            pst2=conn.prepareStatement(sql_act);
            pst2.setString(1, p_name.getText()+" information was added");
            pst2.setString(2, un);
            pst2.setString(3, date);
            pst2.execute();
            
            pstA.setString(1, "0");
            pstA.setString(2, barcode.getText());
            pstA.setString(3, "0");
            pstA.setString(4, "0");
            pstA.execute();
            
            pstR.setString(1, "0");
            pstR.setString(2, barcode.getText());
            pstR.setString(3, "0");
            pstR.setString(4, "0");
            pstR.execute();
            
            JOptionPane.showMessageDialog(null, "Added");
            ProductTable();
            Brand();
            blackText();
            clear();
            AddPanel.setVisible(false);
            ViewPanel.setVisible(true);
            clr.setVisible(false);
            jScrollPane1.setVisible(true);
            jScrollPane1.setVisible(true);
            productTable.setVisible(true);
            BACKlbl.setVisible(true);
            ADDlbl.setVisible(true);
            UPDATElbl.setVisible(false);
            CANCELlbl.setVisible(false);
            
            searchProduct.setVisible(true);
            jLabel8.setVisible(true);
        }
        
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_ADDBtnMouseClicked

    private void UPDATEBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEBtnMouseClicked
        String sql = "UPDATE product set p_name=?, p_barcode=?, p_brand=?, p_weight=?, p_img=?, p_cost=? where p_id=?";
        String sql_act="INSERT INTO activity (act_details,act_user,act_date) values (?,?,?)";
        try{
            boolean check = true;
            pst = conn.prepareStatement(sql);
            error.setText("");
            errorBrand.setText("");
            errorUnit.setText("");
            String date= ""+ now();
            String un = LOGIN.username;
            
            /*if(error.getText().equals("Product name and barcode already exist")){
                check=false;
            }*/
            if(imglbl.getIcon() == null){
                JOptionPane.showMessageDialog(null, "Please upload image");
                check=false;
            }  
            if(p_name.getText().equals("")){
               p_name.setText("Please fill out this field");
               p_name.setForeground(Color.red);
              check=false;
          }
            if(p_name.getText().equals("Please fill out this field")){
              check=false;
          }
            if(barcode.getText().equals("")){
               barcode.setText("Please fill out this field");
               barcode.setForeground(Color.red);
              check=false;
          }
             if(barcode.getText().equals("Please fill out this field")){
              check=false;
          }
             if(p_cost.getText().equals("")){
                p_cost.setText("Please fill out this field");
                p_cost.setForeground(Color.red);
              check=false;
          }
            if(p_cost.getText().equals("Please fill out this field")){
              check=false;
          }
            if(p_brand.getSelectedItem() == null ){
               errorBrand.setText("No brand selected");
               errorBrand.setForeground(Color.red);
              check=false;
          }
            if(p_weight.getText().equals("")){
               p_weight.setText("Please fill out this field");
               p_weight.setForeground(Color.red);
              check=false;
          }
             if(p_weight.getText().equals("Please fill out this field")){
              check=false;
          }
            if(cmbUnit.getSelectedItem() == null ){
               errorUnit.setText("No unit weight selected");
               errorUnit.setForeground(Color.red);
              check=false;
          }
        
          if(check==true){
            
            pst.setString(1, p_name.getText());
            pst.setString(2, barcode.getText());
            pst.setString(3, p_brand.getSelectedItem().toString());
            pst.setString(4, p_weight.getText()+" "+cmbUnit.getSelectedItem());
            pst.setBytes(5,person_image);
            pst.setString(6, p_cost.getText());
            pst.setString(7, p_id.getText());
            pst.executeUpdate();
            
            pst3=conn.prepareStatement(sql_act);
            pst3.setString(1, p_name.getText()+" information was updated");
            pst3.setString(2, un);
            pst3.setString(3, date);
            pst3.execute();
            JOptionPane.showMessageDialog(null, "Updated");
            ProductTable();
            Brand();
            blackText();
            clear();
            AddPanel.setVisible(false);
            ViewPanel.setVisible(true);
            clr.setVisible(false);
            jScrollPane1.setVisible(true);
            jScrollPane1.setVisible(true);
            productTable.setVisible(true);
            BACKlbl.setVisible(true);
            ADDlbl.setVisible(true);
            UPDATElbl.setVisible(false);
            CANCELlbl.setVisible(false);
            
            
            searchProduct.setVisible(true);
            jLabel8.setVisible(true);
        }
        
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_UPDATEBtnMouseClicked

    private void BACKlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKlblMouseClicked
        String stat = LOGIN.status;
            if(stat.equals("Stock-in user")) {
                this.dispose();
                USERMENU u= new USERMENU();
                u.setVisible(true);
            }
               
            else if(stat.equals("Stock-out user")) {
                this.dispose();
                USERMENU u= new USERMENU();
                u.setVisible(true);
            }

            else if (stat.equals("admin")){
                this.dispose();
                HOME h = new HOME();
                h.setVisible(true);
            }
    }//GEN-LAST:event_BACKlblMouseClicked

    private void CANCELBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CANCELBtnMouseClicked
        ProductTable();
        AddPanel.setVisible(false);
        blackText();
        clear();
        UPDATElbl.setVisible(false);
        clr.setVisible(false);
        jScrollPane1.setVisible(true);
        jScrollPane1.setVisible(true);
        productTable.setVisible(true);
        BACKlbl.setVisible(true);
        ADDlbl.setVisible(true);
        UPDATElbl.setVisible(false);
        CANCELlbl.setVisible(false);
        
        searchProduct.setVisible(true);
        jLabel8.setVisible(true);
    }//GEN-LAST:event_CANCELBtnMouseClicked

    private void barcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barcodeKeyTyped
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))||!(Character.isDigit(enter))){
            evt.consume();
        }
        
        if(barcode.getText().length()>=13) {  
         evt.consume();
        }
        //char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))||!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_barcodeKeyTyped

    private void barcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barcodeKeyReleased
        String sql1="select * from product where p_barcode!='ARCHIVE'";    
         Boolean check=true;
     try{
        pst=conn.prepareStatement(sql1);
            rs=pst.executeQuery();
       while(rs.next()){
            String b= rs.getString(3);
            String n= rs.getString(2);     
            if((barcode.getText()).equals(b))
              {  
                blackText();
                p_name.setText(n);
                error.setText("Barcode already exist");
                check=false;
              }
       
       }
       if(barcode.getText().isEmpty()) {
           p_name.setText("");
            error.setText("");
        }
       if(check==true && !(barcode.getText().isEmpty()))
       {
           p_name.setText("");
           error.setText("");
       }
      }catch(Exception e)
          {
            JOptionPane.showMessageDialog(null, e);
          }
    }//GEN-LAST:event_barcodeKeyReleased

    private void p_weightFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_p_weightFocusGained
        if((p_weight.getText()).equals("Please fill out this field"))
        {
            p_weight.setText("");
            p_weight.setForeground(Color.black);
        }
    }//GEN-LAST:event_p_weightFocusGained

    private void p_weightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p_weightKeyTyped
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))&&!(enter=='.')){
            evt.consume();
        }
    }//GEN-LAST:event_p_weightKeyTyped

    private void uploadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadMouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        
        filename =f.getAbsolutePath();
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(imglbl.getWidth(), imglbl.getHeight(), Image.SCALE_DEFAULT));
        imglbl.setIcon(imageIcon);
      try {

            File image = new File(filename);
            FileInputStream fis = new FileInputStream (image);
            ByteArrayOutputStream bos= new ByteArrayOutputStream();
            byte[] buf = new byte[1024];

            for(int readNum; (readNum=fis.read(buf))!=-1; ){

                bos.write(buf,0,readNum);
            }
            person_image=bos.toByteArray();
        }

        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);

        }
    }//GEN-LAST:event_uploadMouseClicked

    private void uploadMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadMouseEntered
        upload.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_uploadMouseEntered

    private void uploadMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadMouseExited
        upload.setForeground(Color. black);
    }//GEN-LAST:event_uploadMouseExited

    private void ADDBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDBtnMouseEntered
        ADDBtn.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_ADDBtnMouseEntered

    private void UPDATEBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEBtnMouseEntered
        UPDATEBtn.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_UPDATEBtnMouseEntered

    private void CANCELBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CANCELBtnMouseEntered
        CANCELBtn.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_CANCELBtnMouseEntered

    private void CANCELBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CANCELBtnMouseExited
        CANCELBtn.setForeground(Color. black);
    }//GEN-LAST:event_CANCELBtnMouseExited

    private void UPDATEBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEBtnMouseExited
        UPDATEBtn.setForeground(Color. black);
    }//GEN-LAST:event_UPDATEBtnMouseExited

    private void ADDBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDBtnMouseExited
        ADDBtn.setForeground(Color. black);
    }//GEN-LAST:event_ADDBtnMouseExited

    private void UPDATElblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATElblMouseClicked
        AddPanel.setVisible(true);
        ADDBtn.setVisible(false);
        UPDATEBtn.setVisible(true);
        blackText();
        clear();
        
        clr.setVisible(true);
        jScrollPane1.setVisible(false);
        jScrollPane1.setVisible(false);
        productTable.setVisible(false);
        BACKlbl.setVisible(false);
        ADDlbl.setVisible(false);
        UPDATElbl.setVisible(false);
        CANCELlbl.setVisible(false);
        
        searchProduct.setVisible(false);
        jLabel8.setVisible(false);
        
        int row=productTable.getSelectedRow();
        String getid=productTable.getModel().getValueAt(row, 0).toString();
        p_id.setText(productTable.getModel().getValueAt(row, 0).toString());
        String pname="Select p_name from product where p_id="+getid;
        try{
            pst= conn.prepareStatement(pname);
            rs=pst.executeQuery();
            
            while (rs.next()) {  
           
            String pna=rs.getString(1);
            p_name.setText(pna);
          }
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        String pcost="Select p_cost from product where p_id="+getid;
        try{
            pst= conn.prepareStatement(pcost);
            rs=pst.executeQuery();
            
            while (rs.next()) {  
           
            String pco=rs.getString(1);
            p_cost.setText(pco);
          }
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }        
        String bc="Select p_barcode from product where p_id="+getid;
        try{
            pst= conn.prepareStatement(bc);
            rs=pst.executeQuery();
            
            while (rs.next()) {  
           
            String b=rs.getString(1);
            barcode.setText(b);
          }
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        String br="Select p_brand from product where p_id="+getid;
        try{
            pst= conn.prepareStatement(br);
            rs=pst.executeQuery();
            
            while (rs.next()) {  
           
            String b=rs.getString(1);
            p_brand.setSelectedItem(b);
          }
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        String w="Select p_weight from product where p_id="+getid;
        try{
            pst= conn.prepareStatement(w);
            rs=pst.executeQuery();
            
            while (rs.next()) {  
           
            String we=rs.getString(1);
            String weight[] = we.split(" ");
            p_weight.setText(weight[0]);
            cmbUnit.setSelectedItem(weight[1]);
          }
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        try{

            String sql ="select * from product where p_id="+getid;

            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            while (rs.next()) {  
            byte[] img = rs.getBytes("p_img");
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(imglbl.getWidth(), imglbl.getHeight(), Image.SCALE_SMOOTH));
            imglbl.setIcon(imageIcon);
            }
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_UPDATElblMouseClicked

    private void ADDlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDlblMouseClicked
        ADDBtn.setVisible(true);
        UPDATEBtn.setVisible(false);
        AddPanel.setVisible(true);
        blackText();
        clear();
        clr.setVisible(true);
        jScrollPane1.setVisible(false);
        jScrollPane1.setVisible(false);
        productTable.setVisible(false);
        BACKlbl.setVisible(false);
        ADDlbl.setVisible(false);
        UPDATElbl.setVisible(false);
        
searchProduct.setVisible(false);
jLabel8.setVisible(false);
    }//GEN-LAST:event_ADDlblMouseClicked

    private void CANCELlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CANCELlblMouseClicked
        ProductTable();
        ADDlbl.setVisible(true);
        UPDATElbl.setVisible(false);
        CANCELlbl.setVisible(false);
        
        searchProduct.setVisible(true);
        jLabel8.setVisible(true);
    }//GEN-LAST:event_CANCELlblMouseClicked

    private void searchProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchProductKeyReleased
        if(!searchProduct.getText().isEmpty()) {
            String sql= "select p_id AS 'ID', p_barcode AS 'Barcode', p_name AS 'Product name', p_cost AS 'Cost', p_brand AS 'Brand', p_weight AS 'Weight' from product where (p_id like ? OR p_barcode like ? OR p_name like ? OR p_cost like ? OR p_brand like ? OR p_weight like ?) AND p_barcode!='ARCHIVE'";
            try{
                pst = conn.prepareStatement(sql);
                pst.setString(1, searchProduct.getText() + "%");
                pst.setString(2, "%" + searchProduct.getText() + "%");
                pst.setString(3, "%" + searchProduct.getText() + "%");
                pst.setString(4, "%" + searchProduct.getText() + "%");
                pst.setString(5, "%" + searchProduct.getText() + "%");
                pst.setString(6, "%" + searchProduct.getText() + "%");

                rs=pst.executeQuery();
                productTable.setModel(DbUtils.resultSetToTableModel(rs));
                tableResize(productTable);
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        if(searchProduct.getText().isEmpty()) {
            ProductTable();
            tableResize(productTable);
        }
    }//GEN-LAST:event_searchProductKeyReleased

    private void p_brandKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p_brandKeyReleased
        String sql1="select * from product";    
        Boolean check=true;
            try{
                pst1=conn.prepareStatement(sql1);
                    rs1=pst1.executeQuery();
               while(rs1.next()){
                    String bn= rs1.getString(4);    
                    if((p_brand.getSelectedItem()).equals(bn))
                      {  
                        blackText();
                        errorBrand.setText("Brand name already exist");
                        check=false;
                      } //"%" + p_brand.getSelectedItem() + "%")

               }
               if(p_brand.getSelectedItem().toString().isEmpty()) {
                    errorBrand.setText("");
                }
               if(check==true && !(p_brand.getSelectedItem().toString().isEmpty()))
               {
                   errorBrand.setText("");
               }
              }catch(Exception e)
                  {
                    JOptionPane.showMessageDialog(null, e);
                  }
    }//GEN-LAST:event_p_brandKeyReleased

    private void barcodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barcodeMouseClicked
        if((barcode.getText()).equals("Please fill out this field"))
        {
            barcode.setText("");
            barcode.setForeground(Color.black);
        }
    }//GEN-LAST:event_barcodeMouseClicked

    private void p_nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_nameMouseClicked
        if((p_name.getText()).equals(""))
        {
            p_name.setForeground(Color.black);
        }
        if((p_name.getText()).equals("Please fill out this field"))
        {
            p_name.setText("");
            p_name.setForeground(Color.black);
        }
    }//GEN-LAST:event_p_nameMouseClicked

    private void p_brandFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_p_brandFocusGained
         if((p_brand.getSelectedItem()).equals("Please fill out this field"))
        {
            p_brand.setSelectedItem("");
            p_brand.setForeground(Color.black);
        }
    }//GEN-LAST:event_p_brandFocusGained

    private void p_brandMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_brandMouseClicked
         if((p_brand.getSelectedItem()).equals("Please fill out this field"))
        {
            p_brand.setSelectedItem("");
            p_brand.setForeground(Color.black);
        }
    }//GEN-LAST:event_p_brandMouseClicked

    private void p_weightMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_weightMouseClicked
        if((p_weight.getText()).equals("Please fill out this field"))
        {
            p_weight.setText("");
            p_weight.setForeground(Color.black);
        }
    }//GEN-LAST:event_p_weightMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        this.setState(ADDPRODUCT.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseEntered
        minimize.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_minimizeMouseEntered

    private void minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseExited
        minimize.setForeground(Color. white);
    }//GEN-LAST:event_minimizeMouseExited

    private void BACKlblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKlblMouseEntered
        BACKlbl.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_BACKlblMouseEntered

    private void BACKlblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKlblMouseExited
        BACKlbl.setForeground(Color. white);
    }//GEN-LAST:event_BACKlblMouseExited

    private void p_costFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_p_costFocusGained
        if((p_cost.getText()).equals("Please fill out this field"))
        {
            p_cost.setText("");
            p_cost.setForeground(Color.black);
        }
    }//GEN-LAST:event_p_costFocusGained

    private void p_costMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_costMouseClicked
        if((p_cost.getText()).equals("Please fill out this field"))
        {
            p_cost.setText("");
            p_cost.setForeground(Color.black);
        }
    }//GEN-LAST:event_p_costMouseClicked

    private void p_costKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p_costKeyTyped
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))&&!(enter=='.')){
            evt.consume();
        }
    }//GEN-LAST:event_p_costKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADDPRODUCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADDPRODUCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADDPRODUCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADDPRODUCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ADDPRODUCT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ADDBtn;
    private javax.swing.JButton ADDlbl;
    private javax.swing.JPanel AddPanel;
    private javax.swing.JLabel BACKlbl;
    private javax.swing.JLabel CANCELBtn;
    private javax.swing.JButton CANCELlbl;
    private javax.swing.JLabel UPDATEBtn;
    private javax.swing.JButton UPDATElbl;
    private javax.swing.JPanel ViewPanel;
    private javax.swing.JTextField barcode;
    private javax.swing.JLabel bgpopup;
    private javax.swing.JLabel clr;
    private javax.swing.JComboBox<String> cmbUnit;
    private javax.swing.JLabel error;
    private javax.swing.JLabel errorBrand;
    private javax.swing.JLabel errorUnit;
    private javax.swing.JLabel imglbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel minimize;
    private javax.swing.JComboBox<String> p_brand;
    private javax.swing.JTextField p_cost;
    private javax.swing.JLabel p_id;
    private javax.swing.JTextField p_name;
    private javax.swing.JTextField p_weight;
    private javax.swing.JTable productTable;
    private javax.swing.JLabel productbg;
    private javax.swing.JTextField searchProduct;
    private javax.swing.JButton upload;
    // End of variables declaration//GEN-END:variables

    private ImageIcon format =null;
    //strin filename
    String filename = null;
    byte[] person_image = null;
}
