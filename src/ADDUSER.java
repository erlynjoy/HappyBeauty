
import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lady Ammon
 */
public class ADDUSER extends javax.swing.JFrame {

    /**
     * Creates new form ADDUSER
     */
    Connection  conn =null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    PreparedStatement pst1=null;
    ResultSet rs2=null;
    PreparedStatement pst2=null;
    ResultSet rs3=null;
    PreparedStatement pst3=null;
    boolean check=true;
    
    public ADDUSER() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("pics/logo3.png")).getImage());
    }
    
    public static String now() {
       String DATE_FORMAT_NOW = "yyyy-MM-dd HH:mm:ss";

        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT_NOW);
        return sdf.format(cal.getTime());
    }
    
    public void tableResize(JTable table) {
        final TableColumnModel columnModel = table.getColumnModel();
        for (int column = 0; column < table.getColumnCount(); column++) {
            int width = 15;
            for(int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width+1, width);
            }
            if(width > 300) {
                width = 300;
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }
    
    void UserTable()
    {
        String sql="select a.e_id AS 'ID', b.e_name AS 'Employee name', b.e_bday AS 'Birthdate', b.e_address AS 'Address', a.username AS 'Username', a.password AS 'Password', a.type AS 'User type', a.status AS 'Status' from account a INNER JOIN employee b ON a.e_id=b.e_id where type!='admin' AND status='ACTIVE'";
        try{
            pst= conn.prepareStatement(sql);
            rs=pst.executeQuery();
            userTable.setModel(DbUtils.resultSetToTableModel(rs));
            tableResize(userTable);
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void blackText(){
        username.setForeground(Color.black);
        password.setForeground(Color.black);
        showpassword.setForeground(Color.black);
        showconfirmpassword.setForeground(Color.black);
        confirmpassword.setForeground(Color.black);
        e_name.setForeground(Color.black);
        e_bday.setForeground(Color.black);
        e_address.setForeground(Color.black);
        type.setForeground(Color.black);
    }

    public void clear(){
        username.setText("");
        password.setText("");
        showpassword.setText("");
        confirmpassword.setText("");
        showconfirmpassword.setText("");
        error2.setText("");
        error3.setText("");
        error1.setText("");
        error4.setText("");
        e_name.setText("");
        e_bday.setText("");
        e_address.setText("");
        type.setSelectedItem(null);
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddPanel = new javax.swing.JPanel();
        user_id = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        e_name = new javax.swing.JTextField();
        e_bday = new javax.swing.JTextField();
        calendar1 = new de.wannawork.jcalendar.JCalendarComboBox();
        username = new javax.swing.JTextField();
        e_address = new javax.swing.JTextField();
        error1 = new javax.swing.JLabel();
        eye = new javax.swing.JLabel();
        showpassword = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        error2 = new javax.swing.JLabel();
        eye1 = new javax.swing.JLabel();
        showconfirmpassword = new javax.swing.JLabel();
        confirmpassword = new javax.swing.JPasswordField();
        error3 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox<>();
        btnADD = new javax.swing.JLabel();
        CANCELBtn = new javax.swing.JLabel();
        btnUPDATE = new javax.swing.JLabel();
        line = new javax.swing.JTextField();
        error4 = new javax.swing.JLabel();
        bgpopup = new javax.swing.JLabel();
        ViewPanel = new javax.swing.JPanel();
        ADDlbl = new javax.swing.JButton();
        UPDATElbl = new javax.swing.JButton();
        REMOVElbl = new javax.swing.JButton();
        CANCELlbl = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        searchUser = new javax.swing.JTextField();
        BACKlbl = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        userinfobg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1350, 720));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AddPanel.setBackground(new java.awt.Color(255, 250, 240));
        AddPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        AddPanel.setMinimumSize(new java.awt.Dimension(450, 480));
        AddPanel.setPreferredSize(new java.awt.Dimension(450, 480));
        AddPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        AddPanel.add(user_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 50, 20));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("USENAME:");
        AddPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 80, 30));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("PASSWORD:");
        AddPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 360, 90, 30));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("CONFIRM PASSWORD:");
        AddPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 450, 160, 30));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("TYPE");
        AddPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 40, 20));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("NAME");
        AddPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, 20));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("BIRTHDATE");
        AddPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 80, 20));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("ADDRESS");
        AddPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 70, 20));

        e_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        e_name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        e_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                e_nameFocusGained(evt);
            }
        });
        e_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e_nameMouseClicked(evt);
            }
        });
        e_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                e_nameKeyTyped(evt);
            }
        });
        AddPanel.add(e_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 230, 40));

        e_bday.setEditable(false);
        e_bday.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        e_bday.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        e_bday.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                e_bdayFocusGained(evt);
            }
        });
        e_bday.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e_bdayMouseClicked(evt);
            }
        });
        AddPanel.add(e_bday, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 230, 40));

        calendar1.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        calendar1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                calendar1StateChanged(evt);
            }
        });
        AddPanel.add(calendar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 115, 130, 27));

        username.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        username.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameKeyReleased(evt);
            }
        });
        AddPanel.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 230, 40));

        e_address.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        e_address.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        e_address.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                e_addressFocusGained(evt);
            }
        });
        e_address.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e_addressMouseClicked(evt);
            }
        });
        AddPanel.add(e_address, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 230, 40));

        error1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        error1.setForeground(new java.awt.Color(255, 0, 0));
        error1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddPanel.add(error1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, 230, 25));

        eye.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/close2.png"))); // NOI18N
        eye.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eyeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eyeMouseReleased(evt);
            }
        });
        AddPanel.add(eye, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 400, 40, 20));

        showpassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        showpassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddPanel.add(showpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 390, 230, 40));

        password.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordKeyReleased(evt);
            }
        });
        AddPanel.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 390, 230, 40));

        error2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        error2.setForeground(new java.awt.Color(255, 0, 0));
        error2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddPanel.add(error2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 430, 230, 25));

        eye1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/close2.png"))); // NOI18N
        eye1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eye1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eye1MouseReleased(evt);
            }
        });
        AddPanel.add(eye1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 490, 40, 20));

        showconfirmpassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        showconfirmpassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddPanel.add(showconfirmpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 480, 230, 40));

        confirmpassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        confirmpassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        confirmpassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                confirmpasswordKeyReleased(evt);
            }
        });
        AddPanel.add(confirmpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 480, 230, 40));

        error3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        error3.setForeground(new java.awt.Color(255, 0, 0));
        error3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddPanel.add(error3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 520, 230, 25));

        type.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Stock-in user", "Stock-out user" }));
        AddPanel.add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 230, 40));

        btnADD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnADD.setText("ADD");
        btnADD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnADDMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnADDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnADDMouseExited(evt);
            }
        });
        AddPanel.add(btnADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 555, 30, 30));

        CANCELBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CANCELBtn.setText("CANCEL");
        CANCELBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CANCELBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CANCELBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CANCELBtnMouseExited(evt);
            }
        });
        AddPanel.add(CANCELBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 555, 60, 30));

        btnUPDATE.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnUPDATE.setText("UPDATE");
        btnUPDATE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUPDATEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUPDATEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUPDATEMouseExited(evt);
            }
        });
        AddPanel.add(btnUPDATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 555, 60, 30));

        line.setBackground(new java.awt.Color(0, 0, 0));
        line.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
        AddPanel.add(line, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, 430, 3));

        error4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        error4.setForeground(new java.awt.Color(255, 0, 0));
        error4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddPanel.add(error4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 230, 25));

        bgpopup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/POPUPADDUSER.png"))); // NOI18N
        AddPanel.add(bgpopup, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 590));

        getContentPane().add(AddPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 95, 450, 590));

        ViewPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ADDlbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ADDlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/add.png"))); // NOI18N
        ADDlbl.setText("ADD EMPLOYEE");
        ADDlbl.setToolTipText("");
        ADDlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ADDlblMouseClicked(evt);
            }
        });
        ViewPanel.add(ADDlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 670, -1, 30));

        UPDATElbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        UPDATElbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/update icon.png"))); // NOI18N
        UPDATElbl.setText("UPDATE");
        UPDATElbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UPDATElblMouseClicked(evt);
            }
        });
        ViewPanel.add(UPDATElbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 670, -1, 30));

        REMOVElbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        REMOVElbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/delete_16x16.gif"))); // NOI18N
        REMOVElbl.setText("DISABLE");
        REMOVElbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                REMOVElblMouseClicked(evt);
            }
        });
        ViewPanel.add(REMOVElbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 670, -1, 30));

        CANCELlbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CANCELlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/cancel.png"))); // NOI18N
        CANCELlbl.setText("CANCEL");
        CANCELlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CANCELlblMouseClicked(evt);
            }
        });
        ViewPanel.add(CANCELlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 670, -1, 30));

        jScrollPane1.setBackground(new java.awt.Color(210, 156, 50));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N

        userTable = new javax.swing.JTable(){
            public boolean isCellEditable (int rowIndex, int colIndex){
                return false;
            }
        };
        userTable.setBackground(new java.awt.Color(210, 156, 50));
        userTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        userTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        userTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        userTable.getTableHeader().setReorderingAllowed(false);
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userTable);

        ViewPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 750, 530));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(210, 156, 50));
        jLabel4.setText("Search:");
        ViewPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1025, 78, 60, 30));

        searchUser.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        searchUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchUser.setToolTipText("");
        searchUser.setName(""); // NOI18N
        searchUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchUserKeyReleased(evt);
            }
        });
        ViewPanel.add(searchUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 73, 230, 40));

        BACKlbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BACKlbl.setForeground(new java.awt.Color(255, 255, 255));
        BACKlbl.setText("BACK");
        BACKlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BACKlblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BACKlblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BACKlblMouseExited(evt);
            }
        });
        ViewPanel.add(BACKlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, 30));

        minimize.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        minimize.setForeground(new java.awt.Color(255, 255, 255));
        minimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimize.setText("–");
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeMouseExited(evt);
            }
        });
        ViewPanel.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 10, 12, 20));

        userinfobg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/ADD-EMPLOYEE_UI.PNG"))); // NOI18N
        userinfobg.setText("jLabel7");
        userinfobg.setMaximumSize(new java.awt.Dimension(1350, 720));
        userinfobg.setMinimumSize(new java.awt.Dimension(1350, 720));
        userinfobg.setPreferredSize(new java.awt.Dimension(1350, 720));
        ViewPanel.add(userinfobg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1350, 720));

        getContentPane().add(ViewPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void eyeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eyeMousePressed
        eye.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/open2.png")));
        String showPass = password.getText().toString();
        showpassword.setVisible(true);
        password.setText("");
        showpassword.setText(showPass);
    }//GEN-LAST:event_eyeMousePressed

    private void eyeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eyeMouseReleased
        eye.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/close2.png")));
        String pass = showpassword.getText().toString();
        showpassword.setVisible(false);
        password.setText(pass);
    }//GEN-LAST:event_eyeMouseReleased

    private void eye1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eye1MousePressed
        eye1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/open2.png")));
        String showPass = confirmpassword.getText().toString();
        showconfirmpassword.setVisible(true);
        confirmpassword.setText("");
        showconfirmpassword.setText(showPass);
    }//GEN-LAST:event_eye1MousePressed

    private void eye1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eye1MouseReleased
        eye1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/close2.png")));
        String pass = showconfirmpassword.getText().toString();
        showconfirmpassword.setVisible(false);
        confirmpassword.setText(pass);
    }//GEN-LAST:event_eye1MouseReleased

    private void usernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyReleased
        String uname = username.getText();
        try {
            if(uname.length() != 0) {
                error1.setText("");
            }
        }
        catch(Exception e) {
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_usernameKeyReleased

    private void passwordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyReleased
         String uname = password.getText();
        try {
            if(uname.length() != 0) {
                error2.setText("");
            }
        }
        catch(Exception e) {
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_passwordKeyReleased

    private void confirmpasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmpasswordKeyReleased
         String uname = confirmpassword.getText();
        try {
            if(uname.length() != 0) {
                error3.setText("");
            }
        }
        catch(Exception e) {
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_confirmpasswordKeyReleased

    private void btnADDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnADDMouseClicked
        String txtname=username.getText();
        String sql = "insert into account(username, password, type, status) values (?,?,?,?)";
        String sql3 = "insert into employee (e_name,e_bday,e_address) values (?,?,?)";
        String sql_act="INSERT INTO activity (act_details,act_user,act_date) values (?,?,?)";
        String sql1 = "select * from account";
        check=true;
        
          try{
            String date= ""+ now();
            String Uusername = LOGIN.username;
            String status = "ACTIVE";
            error3.setText("");
            error2.setText("");
            error1.setText("");
            error4.setText("");
            pst=conn.prepareStatement(sql);
            pst3=conn.prepareStatement(sql3);
            pst1=conn.prepareStatement(sql1);
            rs=pst1.executeQuery();
            
            
                while(rs.next())
                {
                    
                String name=rs.getString(2);
                String str1 = name;
                String str2 = txtname;  

                if(str1.equals(str2) )
                    {
                        JOptionPane.showMessageDialog(null, "Username already taken");
                        check=false;
                    }
                }
                
                String name=e_name.getText();
                char[] charr=name.toCharArray();
                int len=name.length();
                int[] ascii= new int[len];

                for(int test=0;test<len;test++)
                {
                    ascii[test]= (int) charr[test];
                    if(ascii[0]==32||ascii[test]>90&&ascii[test]<97||ascii[test]>122||ascii[test]<32||ascii[test]>32&&ascii[test]<46||ascii[test]>46&&ascii[test]<65)
                    {   
                        e_name.setText("Invalid input");
                        e_name.setForeground(Color.red);
                        check=false;
                        break;
                    }
                }
                
                String address=e_address.getText();
                charr=address.toCharArray();
                len=address.length();
                ascii= new int[len];

                for(int test=0;test<len;test++)
                {
                    ascii[test]= (int) charr[test];
                    if(ascii[0]==32||ascii[test]<32||ascii[test]>32&&ascii[test]<35||ascii[test]>35&&ascii[test]<44||ascii[test]>44&&ascii[test]<48||ascii[test]>57&&ascii[test]<65||ascii[test]>90&&ascii[test]<97||ascii[test]>122)
                    {
                        e_address.setText("Invalid input");
                        e_address.setForeground(Color.red);
                        check=false;
                    }
                }
                
                if(e_name.getText().equals(""))
                {
                    e_name.setText("Please fill out this field");
                    e_name.setForeground(Color.red);
                    check=false;   
                }
                
                if(e_bday.getText().equals(""))
                {
                    e_bday.setText("Please fill out this field");
                    e_bday.setForeground(Color.red);
                    check=false;   
                }
                
                if(e_address.getText().equals(""))
                {
                    e_address.setText("Please fill out this field");
                    e_address.setForeground(Color.red);
                    check=false;   
                }
                
                if(!password.getText().equals(confirmpassword.getText()) && !confirmpassword.getText().equals("")){

                    JOptionPane.showMessageDialog(null, "Passwords are not identical");
                    check=false;
                }

                if(confirmpassword.getText().equals(""))
                {
                    error3.setText("Please fill out this field");
                    check=false;   
                }
                if(password.getText().equals(""))
                {
                    error2.setText("Please fill out this field");
                    check=false;   
                }
                if(username.getText().equals(""))
                {
                    error1.setText("Please fill out this field");
                    check=false;   
                }
                if(type.getSelectedItem() == null ){
                    error4.setText("No user type selected");
                    error4.setForeground(Color.red);
                   check=false;
               }
                
                String str =password.getText();
                int len1=0;
                int len2=0;
                
                len1=str.length();
                len2=txtname.length();
                if(len1 != 0 && (len1 < 8 || len1 > 15)){
                    error2.setText("8 to 15 characters only");
                    check=false;
                }
                /*if(txtname.length() !=0 && (txtname.length() < 8 || txtname.length() > 15 )) {
                    error1.setText("8 to 15 characters only");
                    test = false;
                }*/
                
                if(len2 !=0 && (len2 < 8 || len2 > 15 )) {
                    error1.setText("8 to 15 characters only");
                    check = false;
                }
                    
                if(check==true){
                     pst.setString(1, username.getText());
                     pst.setString(2, password.getText());
                     pst.setString(3, type.getSelectedItem().toString());
                     pst.setString(4, status);
                     pst.execute();
                     
                     pst3.setString(1, e_name.getText());
                     pst3.setString(2, e_bday.getText());
                     pst3.setString(3, e_address.getText());
                     pst3.execute();
                     
                     pst2=conn.prepareStatement(sql_act);
                     pst2.setString(1, e_name.getText()+" employee was added");
                     pst2.setString(2, Uusername);
                     pst2.setString(3, date);
                     pst2.execute();
                     
                     JOptionPane.showMessageDialog(null, "Saved");
                     
                     AddPanel.setVisible(false);
                     ViewPanel.setVisible(true);
                     ADDlbl.setVisible(true);
                     ADDlbl.setEnabled(true);
                     UPDATElbl.setEnabled(false);
                     REMOVElbl.setEnabled(false);
                     CANCELlbl.setEnabled(false);
                     UserTable();
                }
        
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnADDMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        conn=mysqlconnect.ConnectDb();
        showpassword.setVisible(false);
        tableResize(userTable);
        UserTable();
        user_id.setVisible(false);
        AddPanel.setVisible(false);
        ViewPanel.setVisible(true);
        ADDlbl.setVisible(true);
        UPDATElbl.setEnabled(false);
        REMOVElbl.setEnabled(false);
        CANCELlbl.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void btnADDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnADDMouseEntered
        btnADD.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_btnADDMouseEntered

    private void btnADDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnADDMouseExited
        btnADD.setForeground(Color. black);
    }//GEN-LAST:event_btnADDMouseExited

    private void ADDlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDlblMouseClicked
        btnADD.setVisible(true);
        AddPanel.setVisible(true);
        blackText();
        clear();
        ADDlbl.setEnabled(false);
        UPDATElbl.setEnabled(false);
        btnUPDATE.setVisible(false);
    }//GEN-LAST:event_ADDlblMouseClicked

    private void UPDATElblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATElblMouseClicked
        AddPanel.setVisible(true);
        btnADD.setVisible(false);
        btnUPDATE.setVisible(true);
        btnADD.setVisible(false);
        blackText();
        clear();

        BACKlbl.setVisible(false);
        ADDlbl.setVisible(false);
        UPDATElbl.setEnabled(false);
        REMOVElbl.setEnabled(false);
        CANCELlbl.setEnabled(false);

        int row=userTable.getSelectedRow();
        String getid=userTable.getModel().getValueAt(row, 0).toString();
        user_id.setText(userTable.getModel().getValueAt(row, 0).toString());
        String ename="Select e_name from employee where e_id="+getid;
        try{
            pst= conn.prepareStatement(ename);
            rs=pst.executeQuery();

            while (rs.next()) {

                String en=rs.getString(1);
                e_name.setText(en);
            }

        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        String eb="Select e_bday from employee where e_id="+getid;
        try{
            pst= conn.prepareStatement(eb);
            rs=pst.executeQuery();

            while (rs.next()) {

                String ebd=rs.getString(1);
                e_bday.setText(ebd);
            }

        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        String ead="Select e_address from employee where e_id="+getid;
        try{
            pst= conn.prepareStatement(ead);
            rs=pst.executeQuery();

            while (rs.next()) {

                String ed=rs.getString(1);
                e_address.setText(ed);
            }

        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        String pname="Select username from account where e_id="+getid;
        try{
            pst= conn.prepareStatement(pname);
            rs=pst.executeQuery();

            while (rs.next()) {

                String pna=rs.getString(1);
                username.setText(pna);
            }

        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        String bc="Select password from account where e_id="+getid;
        try{
            pst= conn.prepareStatement(bc);
            rs=pst.executeQuery();

            while (rs.next()) {

                String b=rs.getString(1);
                password.setText(b);
            }

        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        String t="Select type from account where e_id="+getid;
        try{
            pst= conn.prepareStatement(t);
            rs=pst.executeQuery();

            while (rs.next()) {

                String ty=rs.getString(1);
                type.setSelectedItem(ty);
            }

        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_UPDATElblMouseClicked

    private void REMOVElblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_REMOVElblMouseClicked
        int result = JOptionPane.showConfirmDialog(null,
            "Are you sure you want to DISABLE this user?",null, JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION) {
            String sql = "UPDATE account set status = ? where e_id = ?";
            int[] rows = userTable.getSelectedRows();

            try {
                pst = conn.prepareStatement(sql);
                
                String date= ""+ now(); 
                
                for(int i = 0; i < rows.length; i++) {
                    String sql_act="INSERT INTO activity (act_details,act_user,act_date) values (?,?,?)";
                    String un = LOGIN.username;
                    String bid = userTable.getValueAt(rows[i], 0).toString();
                    String uname = userTable.getValueAt(rows[i], 1).toString();
                    String details = uname+" status was set to INACTIVE";
                    pst.setString(1, "INACTIVE");
                    pst.setString(2, bid);
                    pst.executeUpdate();
                    
                    pst1=conn.prepareStatement(sql_act);
                        pst1.setString(1, details);
                        pst1.setString(2, un);
                        pst1.setString(3, date);
                        pst1.execute();
                }
                UserTable();
                ADDlbl.setVisible(true);
                UPDATElbl.setEnabled(false);
                CANCELlbl.setEnabled(false);
                REMOVElbl.setEnabled(false);
            }
            catch(Exception e) {
            }
        }
        else{
            UserTable();
            ADDlbl.setVisible(true);
            UPDATElbl.setEnabled(false);
            CANCELlbl.setEnabled(false);
            REMOVElbl.setEnabled(false);
        }
    }//GEN-LAST:event_REMOVElblMouseClicked

    private void CANCELlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CANCELlblMouseClicked
        UserTable();
        ADDlbl.setVisible(true);
        UPDATElbl.setEnabled(false);
        CANCELlbl.setEnabled(false);
        REMOVElbl.setEnabled(false);
    }//GEN-LAST:event_CANCELlblMouseClicked

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        ADDlbl.setVisible(true);
        UPDATElbl.setEnabled(true);
        CANCELlbl.setEnabled(true);
        REMOVElbl.setEnabled(true);
    }//GEN-LAST:event_userTableMouseClicked

    private void BACKlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKlblMouseClicked
        String stat = LOGIN.status;
            if(stat.equals("Stock-in user")) {
                this.dispose();
                USERMENU u= new USERMENU();
                u.setVisible(true);
            }
               
            else if(stat.equals("Stock-out user")) {
                this.dispose();
                USERMENU u= new USERMENU();
                u.setVisible(true);
            }

            else if (stat.equals("admin")){
                this.dispose();
                HOME h = new HOME();
                h.setVisible(true);
            }
    }//GEN-LAST:event_BACKlblMouseClicked

    private void CANCELBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CANCELBtnMouseClicked
        UserTable();
        blackText();
        clear();
        BACKlbl.setVisible(true);
        ADDlbl.setEnabled(true);
        AddPanel.setVisible(false);
        ViewPanel.setVisible(true);
        ADDlbl.setVisible(true);
        ADDlbl.setEnabled(true);
        UPDATElbl.setEnabled(false);
        REMOVElbl.setEnabled(false);
        CANCELlbl.setEnabled(false);
    }//GEN-LAST:event_CANCELBtnMouseClicked

    private void CANCELBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CANCELBtnMouseEntered
        CANCELBtn.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_CANCELBtnMouseEntered

    private void CANCELBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CANCELBtnMouseExited
        CANCELBtn.setForeground(Color.black);
    }//GEN-LAST:event_CANCELBtnMouseExited

    private void btnUPDATEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUPDATEMouseClicked
        String un= user_id.getText();
        String txtname=username.getText();
        String sql = "update account set username=?, password=?, type=? where e_id=?";
        String sql3 = "update employee set e_name=?, e_bday=?, e_address=? where e_id=?";
        String sql_act="INSERT INTO activity (act_details,act_user,act_date) values (?,?,?)";
        String sql1="select * from account where e_id!="+un;
        check=true;
        
          try{
            String date= ""+ now();
            String Uusername = LOGIN.username;
            error4.setText("");
            error3.setText("");
            error2.setText("");
            error1.setText("");
            pst=conn.prepareStatement(sql);
            pst3=conn.prepareStatement(sql3);
            pst1=conn.prepareStatement(sql1);
            rs=pst1.executeQuery();
            
            
                while(rs.next())
                {
                    
                String name=rs.getString(2);
                String str1 = name;
                String str2 = txtname;  

                if(str1.equals(str2) )
                    {
                        JOptionPane.showMessageDialog(null, "Username already taken");
                        check=false;
                    }
                }
                
                String name=e_name.getText();
                char[] charr=name.toCharArray();
                int len=name.length();
                int[] ascii= new int[len];

                for(int test=0;test<len;test++)
                {
                    ascii[test]= (int) charr[test];
                    if(ascii[0]==32||ascii[test]>90&&ascii[test]<97||ascii[test]>122||ascii[test]<32||ascii[test]>32&&ascii[test]<46||ascii[test]>46&&ascii[test]<65)
                    {   
                        e_name.setText("Invalid input");
                        e_name.setForeground(Color.red);
                        check=false;
                        break;
                    }
                }
                
                String address=e_address.getText();
                charr=address.toCharArray();
                len=address.length();
                ascii= new int[len];

                for(int test=0;test<len;test++)
                {
                    ascii[test]= (int) charr[test];
                    if(ascii[0]==32||ascii[test]<32||ascii[test]>32&&ascii[test]<35||ascii[test]>35&&ascii[test]<44||ascii[test]>44&&ascii[test]<48||ascii[test]>57&&ascii[test]<65||ascii[test]>90&&ascii[test]<97||ascii[test]>122)
                    {
                        e_address.setText("Invalid input");
                        e_address.setForeground(Color.red);
                        check=false;
                    }
                }
                
                if(e_name.getText().equals(""))
                {
                    e_name.setText("Please fill out this field");
                    e_name.setForeground(Color.red);
                    check=false;   
                }
                
                if(e_bday.getText().equals(""))
                {
                    e_bday.setText("Please fill out this field");
                    e_bday.setForeground(Color.red);
                    check=false;   
                }
                
                if(e_address.getText().equals(""))
                {
                    e_address.setText("Please fill out this field");
                    e_address.setForeground(Color.red);
                    check=false;   
                }
                
                if(!password.getText().equals(confirmpassword.getText()) && !confirmpassword.getText().equals("")){

                    JOptionPane.showMessageDialog(null, "Passwords are not identical");
                    check=false;
                }

                if(confirmpassword.getText().equals(""))
                {
                    error3.setText("Please fill out this field");
                    check=false;   
                }
                if(password.getText().equals(""))
                {
                    error2.setText("Please fill out this field");
                    check=false;   
                }
                if(username.getText().equals(""))
                {
                    error1.setText("Please fill out this field");
                    check=false;   
                }
                if(type.getSelectedItem() == null ){
                    error4.setText("No user type selected");
                    error4.setForeground(Color.red);
                   check=false;
               }
                
                String str =password.getText();
                int len1=0;
                int len2=0;
                
                len1=str.length();
                len2=txtname.length();
                if(len1 != 0 && (len1 < 8 || len1 > 15)){
                    error2.setText("8 to 15 characters only");
                    check=false;
                }
                /*if(txtname.length() !=0 && (txtname.length() < 8 || txtname.length() > 15 )) {
                    error1.setText("8 to 15 characters only");
                    test = false;
                }*/
                
                if(len2 !=0 && (len2 < 8 || len2 > 15 )) {
                    error1.setText("8 to 15 characters only");
                    check = false;
                }
                    
                if(check==true){
                     pst.setString(1, username.getText());
                     pst.setString(2, password.getText());
                     pst.setString(3, type.getSelectedItem().toString());
                     pst.setString(4, user_id.getText());
                     pst.executeUpdate();
                     
                     pst3.setString(1, e_name.getText());
                     pst3.setString(2, e_bday.getText());
                     pst3.setString(3, e_address.getText());
                     pst3.setString(4, user_id.getText());
                     pst3.executeUpdate();
                     
                     pst2=conn.prepareStatement(sql_act);
                     pst2.setString(1, e_name.getText()+" employee info was updated");
                     pst2.setString(2, Uusername);
                     pst2.setString(3, date);
                     pst2.execute();
                     
                     JOptionPane.showMessageDialog(null, "Updated");
                     UserTable();
                     AddPanel.setVisible(false);
                     ViewPanel.setVisible(true);
                     ADDlbl.setVisible(true);
                     ADDlbl.setEnabled(true);
                     UPDATElbl.setEnabled(false);
                     REMOVElbl.setEnabled(false);
                     CANCELlbl.setEnabled(false);
                     BACKlbl.setVisible(true);
                }
        
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnUPDATEMouseClicked

    private void btnUPDATEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUPDATEMouseEntered
        btnUPDATE.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_btnUPDATEMouseEntered

    private void btnUPDATEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUPDATEMouseExited
        btnUPDATE.setForeground(Color.black);
    }//GEN-LAST:event_btnUPDATEMouseExited

    private void searchUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchUserKeyReleased
        if(!searchUser.getText().isEmpty()) { 
        String sql="select a.e_id AS 'ID', b.e_name AS 'Employee name', b.e_bday AS 'Birthdate', b.e_address AS 'Address', a.username AS 'Username', a.password AS 'Password', a.type AS 'User type', a.status AS 'Status' from account a INNER JOIN employee b ON a.e_id=b.e_id where (a.e_id like ? OR e_name like ? OR b.e_bday like ? OR b.e_address like ? OR a.username like ? OR a.password like ? OR a.type like ? OR a.status like ?) AND type!='admin' AND status='ACTIVE'";
        //String sql= "select user_id AS 'ID', username AS 'Username', password AS 'Password', type AS 'User type', status AS 'Status', Udate_recorded AS 'Date recorded' from user where (user_id like ? OR username like ? OR password like ? OR type like ? OR status like ? OR Udate_recorded like ?) AND type!='admin'";
            try{
                pst = conn.prepareStatement(sql);
                pst.setString(1, searchUser.getText() + "%");
                pst.setString(2, "%" + searchUser.getText() + "%");
                pst.setString(3, "%" + searchUser.getText() + "%");
                pst.setString(4, "%" + searchUser.getText() + "%");
                pst.setString(5, "%" + searchUser.getText() + "%");
                pst.setString(6, "%" + searchUser.getText() + "%");
                pst.setString(7, "%" + searchUser.getText() + "%");
                pst.setString(8, "%" + searchUser.getText() + "%");

                rs=pst.executeQuery();
                userTable.setModel(DbUtils.resultSetToTableModel(rs));
                tableResize(userTable);
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        if(searchUser.getText().isEmpty()) {
            UserTable();
            tableResize(userTable);
        }
    }//GEN-LAST:event_searchUserKeyReleased

    private void e_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_e_nameFocusGained
        if((e_name.getText()).equals("Please fill out this field"))
        {
            e_name.setText("");
            e_name.setForeground(Color.black);
        }
        if((e_name.getText()).equals("Invalid input"))
        {
            e_name.setText("");
            e_name.setForeground(Color.black);
        }
    }//GEN-LAST:event_e_nameFocusGained

    private void e_addressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_e_addressFocusGained
        if((e_address.getText()).equals("Please fill out this field"))
        {
            e_address.setText("");
            e_address.setForeground(Color.black);
        }
        if((e_address.getText()).equals("Invalid input"))
        {
            e_address.setText("");
            e_address.setForeground(Color.black);
        }
    }//GEN-LAST:event_e_addressFocusGained

    private void e_bdayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_e_bdayFocusGained
       if((e_bday.getText()).equals("Please fill out this field"))
        {
            e_bday.setText("");
            e_bday.setForeground(Color.black);
        }
        if((e_bday.getText()).equals("Invalid input"))
        {
            e_bday.setText("");
            e_bday.setForeground(Color.black);
        }
    }//GEN-LAST:event_e_bdayFocusGained

    private void e_nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e_nameMouseClicked
        if((e_name.getText()).equals("Please fill out this field"))
        {
            e_name.setText("");
            e_name.setForeground(Color.black);
        }
        if((e_name.getText()).equals("Invalid input"))
        {
            e_name.setText("");
            e_name.setForeground(Color.black);
        }
    }//GEN-LAST:event_e_nameMouseClicked

    private void e_bdayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e_bdayMouseClicked
        if((e_bday.getText()).equals("Please fill out this field"))
        {
            e_bday.setText("");
            e_bday.setForeground(Color.black);
        }
        if((e_bday.getText()).equals("Invalid input"))
        {
            e_bday.setText("");
            e_bday.setForeground(Color.black);
        }
    }//GEN-LAST:event_e_bdayMouseClicked

    private void e_addressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e_addressMouseClicked
        if((e_address.getText()).equals("Please fill out this field"))
        {
            e_address.setText("");
            e_address.setForeground(Color.black);
        }
        if((e_address.getText()).equals("Invalid input"))
        {
            e_address.setText("");
            e_address.setForeground(Color.black);
        }
    }//GEN-LAST:event_e_addressMouseClicked

    private void e_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e_nameKeyTyped
        e_name.setForeground(Color.black);
        
        char enter = evt.getKeyChar();
        if(Character.isDigit(enter)){
            evt.consume();
        }
    }//GEN-LAST:event_e_nameKeyTyped

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        this.setState(ADDUSER.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseEntered
        minimize.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_minimizeMouseEntered

    private void minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseExited
        minimize.setForeground(Color. white);
    }//GEN-LAST:event_minimizeMouseExited

    private void BACKlblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKlblMouseEntered
        BACKlbl.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_BACKlblMouseEntered

    private void BACKlblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKlblMouseExited
        BACKlbl.setForeground(Color. white);
    }//GEN-LAST:event_BACKlblMouseExited

    private void calendar1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_calendar1StateChanged
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");

        String format=sdf.format(calendar1.getDate());
        e_bday.setVisible(true);
        e_bday.setForeground(Color.black);
        e_bday.setText(format);
    }//GEN-LAST:event_calendar1StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADDUSER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADDUSER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADDUSER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADDUSER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ADDUSER().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADDlbl;
    private javax.swing.JPanel AddPanel;
    private javax.swing.JLabel BACKlbl;
    private javax.swing.JLabel CANCELBtn;
    private javax.swing.JButton CANCELlbl;
    private javax.swing.JButton REMOVElbl;
    private javax.swing.JButton UPDATElbl;
    private javax.swing.JPanel ViewPanel;
    private javax.swing.JLabel bgpopup;
    private javax.swing.JLabel btnADD;
    private javax.swing.JLabel btnUPDATE;
    private de.wannawork.jcalendar.JCalendarComboBox calendar1;
    private javax.swing.JPasswordField confirmpassword;
    private javax.swing.JTextField e_address;
    private javax.swing.JTextField e_bday;
    private javax.swing.JTextField e_name;
    private javax.swing.JLabel error1;
    private javax.swing.JLabel error2;
    private javax.swing.JLabel error3;
    private javax.swing.JLabel error4;
    private javax.swing.JLabel eye;
    private javax.swing.JLabel eye1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField line;
    private javax.swing.JLabel minimize;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField searchUser;
    private javax.swing.JLabel showconfirmpassword;
    private javax.swing.JLabel showpassword;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JTable userTable;
    private javax.swing.JLabel user_id;
    private javax.swing.JLabel userinfobg;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
