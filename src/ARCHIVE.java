import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lady Ammon
 */
public class ARCHIVE extends javax.swing.JFrame {

    /**
     * Creates new form ARCHIVE
     */
    
    Connection  conn =null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    PreparedStatement pst1=null;
    ResultSet rs2=null;
    PreparedStatement pst2=null;
    boolean check=true;
    
    public static String tblName = "";
    public static String id = "";
    
    public ARCHIVE() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("pics/logo3.png")).getImage());
    }
    
    public static String now() {
       String DATE_FORMAT_NOW = "yyyy-MM-dd HH:mm:ss";

        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT_NOW);
        return sdf.format(cal.getTime());
    }
    
    public static String setTbl (String name) {
        tblName = name;
        return tblName;
    }
    public static String getTbl() {
        return tblName;
    }
    
    public void tableResize(JTable table) {
        final TableColumnModel columnModel = table.getColumnModel();
        for (int column = 0; column < table.getColumnCount(); column++) {
            int width = 15;
            for(int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width+1, width);
            }
            if(width > 300) {
                width = 300;
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }
    
    void AUserTable()
    {
        String sql="select a.e_id AS 'ID', b.e_name AS 'Employee name', b.e_bday AS 'Birthdate', b.e_address AS 'Address', a.username AS 'Username', a.password AS 'Password', a.type AS 'User type', a.status AS 'Status' from account a INNER JOIN employee b ON a.e_id=b.e_id where a.status='INACTIVE'";
        try{
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            AuserTable.setModel(DbUtils.resultSetToTableModel(rs));
            tableResize(AuserTable);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        minimize = new javax.swing.JLabel();
        BACKlbl = new javax.swing.JLabel();
        btnrestore1 = new javax.swing.JButton();
        popUp = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnRestore = new javax.swing.JButton();
        Tabs = new javax.swing.JTabbedPane();
        userPane = new javax.swing.JScrollPane();
        AuserTable = new javax.swing.JTable();
        archivebg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1350, 720));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        minimize.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        minimize.setForeground(new java.awt.Color(255, 255, 255));
        minimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimize.setText("â€“");
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeMouseExited(evt);
            }
        });
        getContentPane().add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 10, 12, 20));

        BACKlbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BACKlbl.setForeground(new java.awt.Color(255, 255, 255));
        BACKlbl.setText("BACK");
        BACKlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BACKlblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BACKlblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BACKlblMouseExited(evt);
            }
        });
        getContentPane().add(BACKlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, 30));

        btnrestore1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnrestore1.setText("RESTORE");
        btnrestore1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnrestore1MouseClicked(evt);
            }
        });
        getContentPane().add(btnrestore1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 95, 110, 30));

        popUp.setBackground(new java.awt.Color(255, 250, 240));
        popUp.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        popUp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Do you want to restore this item?");
        popUp.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 20, 210, -1));

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelMouseClicked(evt);
            }
        });
        popUp.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 80, -1));

        btnRestore.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRestore.setText("Restore");
        btnRestore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRestoreMouseClicked(evt);
            }
        });
        popUp.add(btnRestore, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 80, -1));

        getContentPane().add(popUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 280, 240, 110));

        Tabs.setBackground(new java.awt.Color(210, 156, 50));
        Tabs.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        Tabs.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Tabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabsMouseClicked(evt);
            }
        });

        userPane.setBackground(new java.awt.Color(210, 156, 50));

        AuserTable = new javax.swing.JTable(){
            public boolean isCellEditable (int rowIndex, int colIndex){
                return false;
            }
        };
        AuserTable.setBackground(new java.awt.Color(210, 156, 50));
        AuserTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        AuserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        AuserTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        AuserTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        AuserTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AuserTableMouseClicked(evt);
            }
        });
        userPane.setViewportView(AuserTable);

        Tabs.addTab("USER", userPane);

        getContentPane().add(Tabs, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 930, 550));

        archivebg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/ARCHIVE_UI.png"))); // NOI18N
        getContentPane().add(archivebg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1350, 720));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BACKlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKlblMouseClicked
        String stat = LOGIN.status;
            if(stat.equals("Stock-in user")) {
                this.dispose();
                USERMENU u= new USERMENU();
                u.setVisible(true);
            }
               
            else if(stat.equals("Stock-out user")) {
                this.dispose();
                USERMENU u= new USERMENU();
                u.setVisible(true);
            }

            else if (stat.equals("admin")){
                this.dispose();
                HOME h = new HOME();
                h.setVisible(true);
            }
    }//GEN-LAST:event_BACKlblMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        conn=mysqlconnect.ConnectDb();
        popUp.setVisible(false);
        AUserTable();
        tableResize(AuserTable);
    }//GEN-LAST:event_formWindowOpened

    private void TabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabsMouseClicked
        popUp.setVisible(false);
        AUserTable();
    }//GEN-LAST:event_TabsMouseClicked

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        // TODO add your handling code here:
        popUp.setVisible(false);
        AUserTable();
    }//GEN-LAST:event_btnCancelMouseClicked

    private void btnRestoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRestoreMouseClicked
        if(getTbl().equals("USER")) {
            String sql = "UPDATE account set status = ? where e_id = ?";
            String sql1="select * from account where status='ACTIVE'";
            check=true;
            int row=AuserTable.getSelectedRow();
            String getusername=AuserTable.getModel().getValueAt(row, 1).toString();
            int[] rows = AuserTable.getSelectedRows();
            try {
                pst = conn.prepareStatement(sql);
                pst1=conn.prepareStatement(sql1);
                rs=pst1.executeQuery();
                String date= ""+ now();
                
                while(rs.next())
                {
                    
                String name=rs.getString(3);
                String str1 = name;
                String str2 = getusername;  

                if(str1.equals(str2) )
                    {
                        JOptionPane.showMessageDialog(null, "Username already taken");
                        check=false;
                    }
                }
                
                if(check==true){
                    for(int i = 0; i < rows.length; i++) {
                        String sql_act="INSERT INTO activity (act_details,act_user,act_date) values (?,?,?)";
                        String un = LOGIN.username;
                        String uid = AuserTable.getValueAt(rows[i], 0).toString();
                        String uname = AuserTable.getValueAt(rows[i], 1).toString();
                        String details = uname+" status was set to ACTIVE";
                        pst.setString(1, "ACTIVE");
                        pst.setString(2, uid);
                        pst.executeUpdate();
                        
                        pst2=conn.prepareStatement(sql_act);
                        pst2.setString(1, details);
                        pst2.setString(2, un);
                        pst2.setString(3, date);
                        pst2.execute();
                    }
                    AUserTable();
                    popUp.setVisible(false);
                }
            }
            catch(Exception e) {
            }
        }
    }//GEN-LAST:event_btnRestoreMouseClicked

    private void btnrestore1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnrestore1MouseClicked
        popUp.setVisible(true);
    }//GEN-LAST:event_btnrestore1MouseClicked

    private void AuserTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AuserTableMouseClicked
        setTbl("USER");
    }//GEN-LAST:event_AuserTableMouseClicked

    private void BACKlblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKlblMouseEntered
        BACKlbl.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_BACKlblMouseEntered

    private void BACKlblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKlblMouseExited
        BACKlbl.setForeground(Color. white);
    }//GEN-LAST:event_BACKlblMouseExited

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        this.setState(ARCHIVE.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseEntered
        minimize.setForeground(Color.decode("#d29c32"));
    }//GEN-LAST:event_minimizeMouseEntered

    private void minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseExited
        minimize.setForeground(Color. white);
    }//GEN-LAST:event_minimizeMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ARCHIVE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ARCHIVE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ARCHIVE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ARCHIVE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ARCHIVE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AuserTable;
    private javax.swing.JLabel BACKlbl;
    private javax.swing.JTabbedPane Tabs;
    private javax.swing.JLabel archivebg;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRestore;
    private javax.swing.JButton btnrestore1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel minimize;
    private javax.swing.JPanel popUp;
    private javax.swing.JScrollPane userPane;
    // End of variables declaration//GEN-END:variables
}
